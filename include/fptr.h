
/* the id string constant */

#define ID_STR "A\xff\x01S\xfe\x02T\xfd\x03"
#define ID_STR2 "A\xfe\x01S\xfd\x02T\xfc\x03" /* for birth files from pro */
					      /* fields are wider */
#define ID_STR3 "A\xfd\x01S\xfe\x02T\xfb\x03" /* for birth files from Win */
					      /* names are in ansi */
#define ID_STRC "A\xfc\x01S\xfd\x02T\xfa\x03" /* Comment files from Win */
					      /* names are in ansi */
#define ID_STR3W "A\xfa\x0dS\xfb\x03T\xfc\x04" /* for birth files from Win95 */
 			      /* names are in ansi and the file names are wider*/
#define ID_STRCW "A\xfb\x01S\xfa\x02T\xf9\x03" /* Comment files from Win 95 */
					      /* names are in ansi and file names are wider */
#define ID_STR3WX "A\xfa\x0dS\xfb\x03T\xfd\x05" /* for birth files from WinXP */
 			      /* names are in multibyte and the file names are wider*/
#define ID_STR3WXG "A\xfa\x0dS\xfb\x03T\xfd\x07" /* for grid files from WinXP */
 			      /* names are in multibyte and the file names are wider*/
#define ID_STR3WXU "A\xfa\x0dS\xfb\x03T\xfdU" /* for birth files from WinXP */
 			      /* names are in multibyte on xp and the file names are wider and text is unicode*/
#define ID_STR_LEN 9

#define _WIN95_COMMENT  6
#define _WIN95_CHART_   5
#define _COMMENT_FILE   4
#define _WIN16_CHART_   3
#define _DOSPRO_CHART   2
#define _DOSDEX_CHART   1
#define _WINXP_CHART    7
#define _WINXP_GRID     8
#define _WINXP_CHARTUNI   9
/* The FPTR structure. This structure contains an id string which ids
   an ASTRO output file string. This string would be entirely impossible
   in an output file generated by an earlier version of ASTRO. This is
   followed by the ptr for the file */


#pragma pack(2)

typedef struct XFPTR {
	unsigned char ids[ID_STR_LEN+1];
	XPFILE_DB      fpt;
	} XFPTR;

typedef struct FPTR {
	unsigned char ids[ID_STR_LEN+1];
	FILE_DB      fpt;
	} FPTR;

typedef struct W16_FPTR {
	unsigned char ids[ID_STR_LEN+1];
	W16_FILE_DB      fpt;
	} W16_FPTR;

typedef struct O_FPTR {
	unsigned char ids[ID_STR_LEN+1];
	O_FILE_DB      fpt;
	} O_FPTR;

typedef union NFP {
	XFPTR  x;
	FPTR   n;
    W16_FPTR w16;
	O_FPTR o;
    } NFP;

typedef union NFDB {
	O_FILE_DB o;
    W16_FILE_DB w16;
    FILE_DB   n;
	XPFILE_DB x;
	} NFDB;

typedef struct XNFDB {
	NFDB n;
	char *path;
	void set( NFDB *p ) { n = *p; path = 0; }
	void set( NFDB *p, char *pth ) { n = *p; path = pth; }
	} XNFDB;


#pragma pack()

extern unsigned char const * const fpt_ids;
extern unsigned char const * const fpt_ids2;
extern unsigned char const * const fpt_ids3;
extern unsigned char const * const fpt_ids3c;
extern unsigned char const * const fpt_ids3w;
extern unsigned char const * const fpt_idscw;
extern unsigned char const * const fpt_ids3wx;
extern unsigned char const * const fpt_ids3wxg;
extern unsigned char const * const fpt_ids3wxu;
/* Macro to determine if a ptr points to a fptr from a file */
#define isafptr_file( fpt ) ( !memcmp(&(fpt)->o.ids, fpt_ids, ID_STR_LEN ) )

/* Macro to determine if a pointer points to a ID_STR */
#define isa_ids( ids ) ( !memcmp((ids), fpt_ids, ID_STR_LEN ) )

/* Macro to determine if a ptr points to a fptr type 2 from a file */
#define isafptr2_file( fpt ) ( !memcmp(&(fpt)->n.ids, fpt_ids2, ID_STR_LEN ) )

/* Macro to determine if a pointer points to a ID_STR2 */
#define isa_ids2( ids ) ( !memcmp((ids), fpt_ids2, ID_STR_LEN ) )

/* Macro to determine if a ptr points to a fptr type 3 from a file */
#define isafptr3_file( fpt ) ( !memcmp(&(fpt)->n.ids, fpt_ids3, ID_STR_LEN ) )

/* Macro to determine if a pointer points to a ID_STR3 */
#define isa_ids3( ids ) ( !memcmp((ids), fpt_ids3, ID_STR_LEN ) )

/* Macro to determine if a ptr points to a fptr type comment from a file */
#define isafptrc_file( fpt ) ( !memcmp(&(fpt)->n.ids, fpt_idsc, ID_STR_LEN ) )

/* Macro to determine if a pointer points to a ID_STRC */
#define isa_idsc( ids ) ( !memcmp((ids), fpt_idsc, ID_STR_LEN ) )

/* Macro to determine if a ptr points to a fptr type 3W from a file */
#define isafptr3w_file( fpt ) ( !memcmp(&(fpt)->n.ids, fpt_ids3w, ID_STR_LEN ) )

/* Macro to determine if a pointer points to a ID_STR3W */
#define isa_ids3w( ids ) ( !memcmp((ids), fpt_ids3w, ID_STR_LEN ) )

/* Macro to determine if a ptr points to a fptr type comment95 from a file */
#define isafptrcw_file( fpt ) ( !memcmp(&(fpt)->n.ids, fpt_idscw, ID_STR_LEN ) )

/* Macro to determine if a pointer points to a ID_STRCW */
#define isa_idscw( ids ) ( !memcmp((ids), fpt_idscw, ID_STR_LEN ) )

/* Macro to determine if a pointer points to a ID_STR3WX */
#define isa_ids3wx( ids ) ( !memcmp((ids), fpt_ids3wx, ID_STR_LEN ) )

/* Macro to determine if a pointer points to a ID_STR3WXU */
#define isa_ids3wxu( ids ) ( !memcmp((ids), fpt_ids3wxu, ID_STR_LEN ) )

/* Macro to determine if a pointer points to a ID_STR3WXG */
#define isa_ids3wxg( ids ) ( !memcmp((ids), fpt_ids3wxg, ID_STR_LEN ) )

/* Macro to determine if a ptr points to a fptr type 3WX from a file */
#define isafptr3wx_file( fpt ) ( !memcmp(&(fpt)->n.ids, fpt_ids3wx, ID_STR_LEN ) )

/* Macro to determine if a ptr points to a fptr type 3WXG from a file */
#define isafptr3wxg_file( fpt ) ( !memcmp(&(fpt)->n.ids, fpt_ids3wxg, ID_STR_LEN ) )

/* Macro to determine if a ptr points to a fptr type 3WXU from a file */
#define isafptr3wxu_file( fpt ) ( !memcmp(&(fpt)->n.ids, fpt_ids3wxu, ID_STR_LEN ) )

/* Macro to read a fptr from a file, but not copy it to the callers data */
#define  read_fptr( file )     readx_fptr( (file), NULL )

/* Macro to fread a fptr from a file, but not copy it to the callers data */
#define  fread_fptr( file )    freadx_fptr( (file), NULL, 0 )

extern int write_fptr( char *file, NFDB *ptr, int type );
extern FILE *fwrite_fptr( char *file, NFDB *ptr, int type );
extern int readx_fptr( char *file, NFP *ptr, int do_read );
extern FILE *freadx_fptr( char *file, NFP *ptr, int do_read );
extern char *enquote_strclip( unsigned char *str, unsigned char *buf );
extern char *xstrupr( char *src );
extern int write_demo_message( FILE *stream );

extern O_FILE_DB *cvt_filedb_2_ofiledb( W16_FILE_DB *fdp, O_FILE_DB *ofdp );
extern W16_FILE_DB *cvt_ofiledb_2_nfiledb( W16_FILE_DB *nfdp, O_FILE_DB *fdp );
extern W16_FILE_DB *cvt_filedb_2_win( W16_FILE_DB *fdp );
extern W16_FILE_DB *cvt_win_2_filedb( W16_FILE_DB *fdp );
extern W16_FILE_DB *cvt_filedb_2_w16filedb( W16_FILE_DB *ofdp, FILE_DB *fdp );
extern XPFILE_DB *cvt_w16filedb_2_filedb( W16_FILE_DB *ofdp, XPFILE_DB *fdp );
extern XPFILE_DB *FileDb2XPFileDB( FILE_DB *old, XPFILE_DB *newp );


extern short fdata_write( FILE *stream, unsigned short type );
extern short fdata_read( FILE *stream );
FILE *reread ( char *file, FILE *stream, NFP *ptr);
